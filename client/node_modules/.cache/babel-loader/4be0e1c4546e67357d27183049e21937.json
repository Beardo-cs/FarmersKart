{"ast":null,"code":"var _jsxFileName = \"/home/mahi/Downloads/MERNd/social_media/client/src/components/routing/PrivateRoute.js\";\n//when we loged out the account and go back to the page we can see the previous datas, but this should not happen. To avoid this we have create a private route\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // rest operator, it will take anything was passed in\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      isAuthenticated,\n      loading\n    },\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/mahi/Downloads/MERNd/social_media/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;;;AACA,MAAMC,YAAY,GAAG;AAAA,MAAE;AAAEC,IAAAA,SAAS,EAAGC,SAAd;AACnBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KADa;AAEnB,OAAGC;AAFgB,GAAF;AAAA,sBAIjB,QAAC,KAAD,OACSA,IADT;AAEI,IAAA,MAAM,EAAKC,KAAK,IACZ,CAACH,eAAD,IAAoB,CAACC,OAArB,gBACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,gBAGQ,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AANhB;AAAA;AAAA;AAAA;AAAA,UAJiB;AAAA,CAArB;;KAAMP,Y;AAgBNA,YAAY,CAACQ,SAAb,GAAyB;AACrBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC;AADF,CAAzB;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADkB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAAEY,eAAF,CAAP,CAA2BX,YAA3B,CAAf","sourcesContent":["//when we loged out the account and go back to the page we can see the previous datas, but this should not happen. To avoid this we have create a private route\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// rest operator, it will take anything was passed in\nconst PrivateRoute = ( { component : Component, \n    auth: { isAuthenticated, loading},\n    ...rest \n}) => (\n    <Route \n        { ...rest} \n        render = { props=> \n            !isAuthenticated && !loading ? (\n                <Redirect to='/login' />\n                ) : (\n                    <Component {...props} />\n                    )\n        } \n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect (mapStateToProps) (PrivateRoute)"]},"metadata":{},"sourceType":"module"}