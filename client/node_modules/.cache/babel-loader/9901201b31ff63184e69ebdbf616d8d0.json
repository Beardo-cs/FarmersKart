{"ast":null,"code":"var _jsxFileName = \"/home/qqa0407/Dev_connector_New/client/src/components/profile/ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = _ref => {\n  _s();\n\n  let {\n    username,\n    getGithubRepos,\n    repos\n  } = _ref;\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \" Github Repo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 27\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_black\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\" Stars: \", repo.stargazers_count, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\" Watchers: \", repo.watchers_count, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\" Forks: \", repo.forks_count, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["/home/qqa0407/Dev_connector_New/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;;;AAEA,MAAMC,aAAa,GAAG,QAAwC;AAAA;;AAAA,MAAvC;AAAEC,IAAAA,QAAF;AAAYF,IAAAA,cAAZ;AAA4BG,IAAAA;AAA5B,GAAuC;AAC1DP,EAAAA,SAAS,CAAE,MAAK;AACZI,IAAAA,cAAc,CAAEE,QAAF,CAAd;AACH,GAFQ,EAEN,CAACF,cAAD,CAFM,CAAT;AAIA,sBACA;AAAK,IAAA,SAAS,EAAE,gBAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAE,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKG,KAAK,KAAK,IAAV,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACV;AAAoB,MAAA,SAAS,EAAE,wBAA/B;AAAA,8BACI;AAAA,gCACI;AAAA,iCACI;AAAG,YAAA,IAAI,EAAIA,IAAI,CAACC,QAAhB;AACA,YAAA,MAAM,EAAC,QADP;AAEA,YAAA,GAAG,EAAC,qBAFJ;AAAA,sBAICD,IAAI,CAACE;AAJN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAA,+BACI;AAAA,kCACA;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,mCAA6CH,IAAI,CAACI,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,sCAA6CJ,IAAI,CAACK,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,mCAA2CL,IAAI,CAACM,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA,OAAUN,IAAI,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA,YADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA6BH,CAlCD;;GAAMX,a;;KAAAA,a;AAoCNA,aAAa,CAACY,SAAd,GAA0B;AACtBb,EAAAA,cAAc,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADT;AAEtBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,KAAV,CAAgBD,UAFD;AAGtBb,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,MAAV,CAAiBF;AAHL,CAA1B;;AAOA,MAAMG,eAAe,GAAEC,KAAK,KAAK;AAC7BhB,EAAAA,KAAK,EAAEgB,KAAK,CAACC,OAAN,CAAcjB;AADQ,CAAL,CAA5B;;AAIA,eAAeL,OAAO,CAAEoB,eAAF,EAAmB;AAAClB,EAAAA;AAAD,CAAnB,CAAP,CAA8CC,aAA9C,CAAf","sourcesContent":["import React , {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {getGithubRepos} from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos}) => {\n    useEffect (()=> {\n        getGithubRepos (username);\n    }, [getGithubRepos]);\n\n    return (\n    <div className =\"profile-github\">\n        <h2 className ='text-primary my-1'> Github Repo </h2>\n        {repos === null ? <Spinner /> : (\n            repos.map(repo => (\n                <div key={repo._id} className ='repo bg-white p-1 my-2'>\n                    <div>\n                        <h4>\n                            <a href = {repo.html_url} \n                            target='_black' \n                            rel='noopener noreferrer'\n                            >\n                            {repo.name}\n                            </a>\n                        </h4>\n                        <p>{repo.description}</p>\n                    </div>  \n                    <div>\n                        <ul>\n                        <li className=\"badge badge-primary\"> Stars: {repo.stargazers_count} </li>\n                        <li className=\"badge badge-dark\"> Watchers: {repo.watchers_count} </li>\n                        <li className=\"badge badge-light\"> Forks: {repo.forks_count} </li>\n                        </ul>\n                    </div>\n                    </div>\n                ))\n             )}\n    </div>\n    );\n};\n\nProfileGithub.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired\n\n};\n\nconst mapStateToProps =state => ({\n    repos: state.profile.repos\n});\n\nexport default connect (mapStateToProps, {getGithubRepos }) (ProfileGithub);"]},"metadata":{},"sourceType":"module"}