{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from './types'; //Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      // send along with id and like data\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Remove Like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get Post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('Comment Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/qqa0407/Dev_connector_New/client/src/actions/post.js"],"names":["axios","setAlert","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","addComment","postId","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\nimport {\n    DELETE_POST,\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES, \n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from './types';\n\n//Get posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n\n        dispatch ({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch ({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n//Add Like\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n\n        dispatch ({\n            type: UPDATE_LIKES,\n            // send along with id and like data\n            payload: {id, likes: res.data}\n        });\n    } catch (err) {\n        dispatch ({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n//Remove Like\nexport const removeLike = id => async dispatch => {\n    try {\n      const res = await axios.put(`/api/posts/unlike/${id}`);\n  \n      dispatch({\n        type: UPDATE_LIKES,\n        payload: { id, likes: res.data }\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n//Delete Post\nexport const deletePost = id => async dispatch => {\n    try {\n         await axios.delete(`/api/posts/${id}`);\n\n        dispatch ({\n            type: DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert('Post Removed', 'success'));\n    } catch (err) {\n        dispatch ({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n//Add Post\nexport const addPost = formData => async dispatch => {\n    const config = {\n        headers: {\n            'Content-type': 'application/json'\n       }\n    }\n    try {\n        const res = await axios.post('/api/posts', formData, config);\n\n        dispatch ({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post Created', 'success'));\n    } catch (err) {\n        dispatch ({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n//Get Post\nexport const getPost = id => async dispatch => {\n    \n    try {\n        const res = await axios.get(`/api/posts/${id}`);\n\n        dispatch ({\n            type: GET_POST,\n            payload: res.data\n        });\n\n    } catch (err) {\n        dispatch ({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n//Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-type': 'application/json'\n       }\n    }\n    try {\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n\n        dispatch ({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Comment Added', 'success'));\n    } catch (err) {\n        dispatch ({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n//Delete comment\nexport const deleteComment = (postId, commentId ) => async dispatch => {\n    \n    try {\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n        dispatch ({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        });\n\n        dispatch(setAlert('Comment Deleted', 'success'));\n    } catch (err) {\n        dispatch ({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}