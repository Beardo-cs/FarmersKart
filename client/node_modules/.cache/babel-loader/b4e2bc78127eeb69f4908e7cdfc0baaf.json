{"ast":null,"code":"var _jsxFileName = \"/home/qqa0407/Dev_connector_New/client/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\n// Here we are going to fetch all of the data using  in action and bring it in from redux state and pass it down to other components like exp and edu\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // Adding the spinner to the dashboard\n\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    getCurrentProfile,\n    deleteAccount,\n    auth: {\n      user\n    },\n    profile: {\n      profile,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]); // Displaying the user name, If user has no profile it will ask us to clik the profile creation button to create profile\n\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 43\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \" Dashbaord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), \" Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), profile !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Experience, {\n        experience: profile.experience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Education, {\n        education: profile.education\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => deleteAccount(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user-minus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), \" Delete My Account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" You have not setup a profile yet, please add some info \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-profile\",\n        className: \"btn btn-primary my-1\",\n        children: \" Create Profile \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 58\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/qqa0407/Dev_connector_New/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","Spinner","DashboardActions","Experience","Education","getCurrentProfile","deleteAccount","Dashboard","auth","user","profile","loading","name","experience","education","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["// Here we are going to fetch all of the data using  in action and bring it in from redux state and pass it down to other components like exp and edu\nimport React, { Fragment, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n// Adding the spinner to the dashboard\nimport Spinner from '../layout/Spinner'; \nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\n \nconst Dashboard = ({ \n    getCurrentProfile, \n    deleteAccount,\n    auth: { user },\n    profile: { profile, loading } \n}) => {\n    useEffect (() => {\n        getCurrentProfile();\n    }, [getCurrentProfile]);\n\n    // Displaying the user name, If user has no profile it will ask us to clik the profile creation button to create profile\n    return loading && profile === null ? (<Spinner />): (<Fragment>\n        <h1 className =\"large text-primary\"> Dashbaord</h1>\n        <p className =\"lead\">\n            <i className =\"fas fa-user\"></i> Welcome {user && user.name} \n        </p>\n        { profile !== null ? (\n            <Fragment> \n            <DashboardActions /> \n            <Experience experience={profile.experience}/>\n            <Education education={profile.education}/>\n\n            <div className =\"my-2\">\n            <button className= \"btn btn-danger\" onClick={() => deleteAccount()}>\n                <i className=\"fas fa-user-minus\"></i> Delete My Account\n            </button>\n            </div>\n            </Fragment> \n            ) : ( \n                <Fragment>\n            <p> You have not setup a profile yet, please add some info </p>\n            <Link to ='/create-profile' className=\"btn btn-primary my-1\"> Create Profile </Link>\n            </Fragment>\n            )\n        }\n        </Fragment>\n        );\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect (\n    mapStateToProps, \n    { getCurrentProfile, deleteAccount}\n    ) (Dashboard);"]},"metadata":{},"sourceType":"module"}