{"ast":null,"code":"var _jsxFileName = \"/home/qqa0407/Dev_connector_New/client/src/components/post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { getPost } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    getPost,\n    post: {\n      post,\n      loading\n    },\n    match\n  } = _ref;\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      className: \"btn\",\n      children: \"Back to  Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      showActions: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: post._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment,\n        postId: post._id\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Post;\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/qqa0407/Dev_connector_New/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","PostItem","CommentForm","CommentItem","getPost","Post","post","loading","match","params","id","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;;;AAEA,MAAMC,IAAI,GAAG,QAA8C;AAAA;;AAAA,MAA7C;AAACD,IAAAA,OAAD;AAAUE,IAAAA,IAAI,EAAE;AAACA,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAhB;AAAiCC,IAAAA;AAAjC,GAA6C;AACzDZ,EAAAA,SAAS,CAAE,MAAM;AACfQ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACN,OAAD,CAFM,CAAT;AAIA,SAAQG,OAAO,IAAKD,IAAI,KAAK,IAArB,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADM,gBAGN,QAAC,QAAD;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,QAAV;AAAmB,MAAA,SAAS,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIG,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJH,eAKG,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,IAAI,CAACK;AAA1B;AAAA;AAAA;AAAA;AAAA,YALH,eAMG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACCL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkBC,OAAO,iBACxB,QAAC,WAAD;AAA+B,QAAA,OAAO,EAAIA,OAA1C;AAAmD,QAAA,MAAM,EAAGR,IAAI,CAACK;AAAjE,SAAkBG,OAAO,CAACH,GAA1B;AAAA;AAAA;AAAA;AAAA,cADD;AADD;AAAA;AAAA;AAAA;AAAA,YANH;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAgBD,CArBD;;GAAMN,I;;KAAAA,I;AAuBNA,IAAI,CAACU,SAAL,GAAiB;AACfX,EAAAA,OAAO,EAAGP,SAAS,CAACmB,IAAV,CAAeC,UADV;AAEfX,EAAAA,IAAI,EAAET,SAAS,CAACqB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACoB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAAqCC,IAArC,CAAf","sourcesContent":["import React , {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport {getPost} from '../../actions/post';\n\nconst Post = ({getPost, post: {post, loading}, match }) => {\n  useEffect (() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return  loading  || post === null ? (\n    <Spinner /> \n  ): (\n    <Fragment>\n    <Link to ='/posts' className='btn'>\n      Back to  Posts\n    </Link>\n       <PostItem post={post} showActions={false} />\n       <CommentForm postId={post._id} />\n       <div className='comments'>\n       {post.comments.map(comment => (\n         <CommentItem key={comment._id} comment = {comment} postId ={post._id} />\n       ))}\n       </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost : PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {getPost} )(Post);"]},"metadata":{},"sourceType":"module"}