{"ast":null,"code":"var _jsxFileName = \"/home/mahi/Downloads/MERNd/social_media/client/src/components/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    getProfileById,\n    profile: {\n      profile,\n      loading\n    },\n    auth,\n    match\n  } = _ref;\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back To Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: experience\n            }, experience._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" No experience credentials \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [profile.education.map(education => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n              education: education\n            }, education._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" No education credentials \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGithub, {\n          username: profile.githubusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/mahi/Downloads/MERNd/social_media/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","getProfileById","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport{ getProfileById} from '../../actions/profile';\n\nconst Profile =({ \n    getProfileById, \n    profile: {profile, loading}, \n    auth, \n    match\n}) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById]);\n\n    return (\n    <Fragment>\n    {profile === null || loading ? (\n        <Spinner/> \n    ) : (\n        <Fragment>\n        <Link to='/profiles' className='btn btn-light'>\n        Back To Profiles\n        </Link>\n        {auth.isAuthenticated && \n            auth.loading === false && \n            auth.user._id === profile.user._id && (\n            <Link to ='/edit-profile' className ='btn btn-dark'>\n                Edit Profile\n            </Link>\n            )}\n            \n            <div class=\"profile-grid my-1\">\n                <ProfileTop profile={profile} />\n                <ProfileAbout profile={profile} />\n                <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Experience</h2>\n                        {profile.experience.length > 0 ? (\n                            <Fragment> \n                            { profile.experience.map(experience => (\n                            <ProfileExperience \n                            key={experience._id} \n                            experience={experience}\n                             />\n                            ))} </Fragment>\n                        ) : (\n                            <h4> No experience credentials </h4>\n                            )} \n                    </div>\n                    <div className=\"profile-edu bg-white p-2\">\n                    <h2 className=\"text-primary\">Education</h2>\n                    {profile.education.length > 0 ? (\n                        <Fragment> \n                        { profile.education.map(education => (\n                        <ProfileEducation \n                        key={education._id} \n                        education={education} \n                        />\n                        ))} </Fragment>\n                    ) : (\n                        <h4> No education credentials </h4>\n                        )} \n                </div>\n\n                {profile.githubusername && (\n                    <ProfileGithub username={ profile.githubusername } />\n                )}\n            </div>\n        </Fragment> \n    )}\n    </Fragment>\n    );\n};\n\nProfile.propTypes ={\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n});\nexport default connect(mapStateToProps, {getProfileById}) (Profile);"]},"metadata":{},"sourceType":"module"}