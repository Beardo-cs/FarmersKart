{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id !== payload)\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mahi/Downloads/MERNd/social_media/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":"AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,QALJ,EAMIC,QANJ,EAOIC,WAPJ,EAQIC,cARJ,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;AACnD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAiBF,MAAvB;;AAEA,UAAQC,IAAR;AACI,SAAKf,SAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHJ,QAAAA,KAAK,EAACO,OAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,QAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,IAAI,EAAEM,OAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKP,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFJ;AAGHE,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKR,WAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKA,SAAKV,UAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHD,QAAAA,KAAK,EAACI,OAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKT,YAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgBT,IAAI,IACvBA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EAAC,GAAGV,IAAJ;AAAUW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAAzB,SAA1B,GAA0DX,IADvD,CAFJ;AAKCC,QAAAA,OAAO,EAAE;AALV,OAAP;;AAOA,SAAKL,WAAL;AACI,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,IAAI,EAAE,EAAE,GAAGG,KAAK,CAACH,IAAX;AAAiBY,UAAAA,QAAQ,EAAEN;AAA3B,SAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,IAAI,EAAE,EACJ,GAAGG,KAAK,CAACH,IADL;AAEJY,UAAAA,QAAQ,EAAET,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBL,MAApB,CACPM,OAAD,IAAaA,OAAO,CAACL,GAAR,KAAgBF,OADrB;AAFN,SAFD;AAQLL,QAAAA,OAAO,EAAE;AARJ,OAAP;;AAUR;AACI,aAAOE,KAAP;AAzDZ;AA2DH","sourcesContent":["import {\n    GET_POSTS,\n    POST_ERROR, \n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n}\n\nexport default function (state = initialState, action) {\n    const {type, payload} =action;\n\n    switch (type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts:payload,\n                loading: false\n            };\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false \n            }\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload, ...state.posts],\n                loading: false\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload),\n                loading: false\n            };\n            case POST_ERROR:\n                return {\n                    ...state,\n                    error:payload,\n                    loading: false\n                };\n            case UPDATE_LIKES:\n                return {\n                    ...state,\n                    posts: state.posts.map(post => \n                        post._id === payload.id ? {...post, likes: payload.likes}:post\n                        ),\n                        loading: false \n                };\n                case ADD_COMMENT:\n                    return {\n                      ...state,\n                      post: { ...state.post, comments: payload },\n                      loading: false\n                    };\n                  case REMOVE_COMMENT:\n                    return {\n                      ...state,\n                      post: {\n                        ...state.post,\n                        comments: state.post.comments.filter(\n                          (comment) => comment._id !== payload\n                        )\n                      },\n                      loading: false\n                    };\n            default:\n                return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}